name: Repository Setup

on:
  workflow_dispatch:
    inputs:
      configure_protection:
        description: 'Configure branch protection rules'
        type: boolean
        default: true

jobs:
  configure-repository:
    name: Configure Repository Settings
    runs-on: ubuntu-latest
    if: github.event.inputs.configure_protection == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure branch protection for main
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // Configure branch protection for main
          try {
            await github.rest.repos.updateBranchProtection({
              owner: owner,
              repo: repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: [
                  'Build and Test',
                  'Code Quality Analysis', 
                  'Validate Pull Request',
                  'Security Vulnerability Scan'
                ]
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 1,
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false,
                require_last_push_approval: true
              },
              restrictions: null,
              allow_force_pushes: false,
              allow_deletions: false,
              block_creations: false,
              required_linear_history: true,
              required_conversation_resolution: true
            });
            console.log('✅ Branch protection configured for main branch');
          } catch (error) {
            console.log('⚠️ Could not configure main branch protection:', error.message);
          }
          
          // Configure branch protection for master (if exists)
          try {
            await github.rest.repos.updateBranchProtection({
              owner: owner,
              repo: repo,
              branch: 'master',
              required_status_checks: {
                strict: true,
                contexts: [
                  'Build and Test',
                  'Code Quality Analysis',
                  'Validate Pull Request', 
                  'Security Vulnerability Scan'
                ]
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 1,
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false,
                require_last_push_approval: true
              },
              restrictions: null,
              allow_force_pushes: false,
              allow_deletions: false,
              block_creations: false,
              required_linear_history: true,
              required_conversation_resolution: true
            });
            console.log('✅ Branch protection configured for master branch');
          } catch (error) {
            console.log('⚠️ Could not configure master branch protection:', error.message);
          }
    
    - name: Configure repository settings
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          try {
            // Update repository settings
            await github.rest.repos.update({
              owner: owner,
              repo: repo,
              allow_squash_merge: true,
              allow_merge_commit: false,
              allow_rebase_merge: true,
              delete_branch_on_merge: true,
              allow_auto_merge: true,
              security_and_analysis: {
                secret_scanning: {
                  status: 'enabled'
                },
                secret_scanning_push_protection: {
                  status: 'enabled'
                }
              }
            });
            console.log('✅ Repository settings configured');
          } catch (error) {
            console.log('⚠️ Could not update repository settings:', error.message);
          }
    
    - name: Create production environment
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          try {
            // Create production environment
            await github.rest.repos.createOrUpdateEnvironment({
              owner: owner,
              repo: repo,
              environment_name: 'production',
              wait_timer: 0,
              reviewers: [],
              deployment_branch_policy: {
                protected_branches: true,
                custom_branch_policies: false
              }
            });
            console.log('✅ Production environment configured');
          } catch (error) {
            console.log('⚠️ Could not create production environment:', error.message);
          }
